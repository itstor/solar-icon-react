name: 📦 Build and Release
on:
  push:
    branches:
      - main

jobs:
  check_if_version_upgraded:
    name: 🔍 Check if Version Upgraded
    runs-on: ubuntu-latest
    outputs:
      from_version: ${{ steps.step1.outputs.from_version }}
      to_version: ${{ steps.step1.outputs.to_version }}
      is_upgraded_version: ${{ steps.step1.outputs.is_upgradable }}
      is_prerelease: ${{ steps.step1.outputs.is_prerelease }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      - name: 🔬 Analyze Version
        uses: itstor/check-upgradable-version@v2
        id: step1
        with:
          version_prefix: 'v'
          include_prefix: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_github_release:
    name: 🚀 Build, Publish, and Release
    runs-on: ubuntu-latest
    needs: check_if_version_upgraded
    if: needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📢 Publish package
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🎉 Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ needs.check_if_version_upgraded.outputs.to_version }}
          tag_name: ${{ needs.check_if_version_upgraded.outputs.to_version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ needs.check_if_version_upgraded.outputs.is_prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
